# project reflection notes:
# Fitness Tracker

Welcome to the Fitness Tracker app! This application helps you track your fitness goals, workouts, water intake, and meal plans.

# Getting Started
To get started with the Fitness Tracker app, follow these steps:
Clone or download the repository to your local machine.
Open the index.html file in your web browser.

# Features
# 1. Welcome Message
Upon opening the app, you'll see a welcome message that displays the current date

# 2. Workout Tracker
Enter your workout routines into the input field and click "Submit" to add them to the workout list.

# 3. Fitness Goals
Add your fitness goals using the input field and click "Submit" to add them to the goals list. Duplicate goals are prevented.

# 4. Water Intake Tracker
Track your daily water intake by clicking the "Increase" or "Decrease" buttons. The total intake is displayed.

# 5. Progress Charts
Progress charts for workout and calorie intake are updated dynamically.

# 6. Dark Theme
Toggle between light and dark themes by clicking the theme toggle button.

# 7. Meal Plan Submission
Submit your meal plan using the provided form. An alert will confirm successful submission.

# Contributing
Contributions are welcome! If you have any suggestions or want to report issues, please feel free to open an issue or submit a pull request.

# challenges faced:
The main challenge encountered in the Fitness Tracker app was preventing users from adding duplicate fitness goals to the list. 
This required implementing logic to check whether a newly entered goal already existed in the list of goals before appending it. 
The difficulty was efficiently comparing the new goal with existing ones and handling duplicate cases to send a warning message that the message text already exists.

# Skills Learned
DOM Manipulation: Working with the Document Object Model (DOM) to retrieve existing goals and dynamically create new ones.
Event Handling: Utilizing event listeners to trigger functions when specific actions occur, such as clicking buttons or submitting forms.
Conditional Logic: Implementing conditional statements to execute different actions based on whether certain conditions are met, such as checking for duplicate goals.
Alert Messaging: Utilizing JavaScript's alert function to inform users about potential issues, such as attempting to add a duplicate goal.
Debugging Techniques: Employing debugging strategies to identify and resolve issues within the code, such as preventing duplicate goals.
